name: Easy Pipeline

on: [pull_request]

jobs:
  golang-linter:
    name: Step 1. Linter tests
    runs-on: ubuntu-22.04
    container: golang:1.22.1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.59.1
  test:
    name: Step 2. Go vet tests
    runs-on: ubuntu-22.04
    container: golang:1.22.1
    steps:
      - uses: actions/checkout@v4
      - name: Vet tests
        run: |
          go vet ./...
      - name: Run Unit Tests
        run: GOOS=linux GOARCH=amd64 go test
  coverage:
    needs: [golang-linter, test]
    name: Step 3. Coverage reports
    runs-on: ubuntu-22.04
    container: golang:1.22.1
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.22.1'
      - name: Run coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: vadskev/final-sprint-12